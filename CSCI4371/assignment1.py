# -*- coding: utf-8 -*-
"""Assignment1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Lj3zPpxR_oXCwkfWRm0VjJ5ZpP_4fWNx
"""

#1) Holden Davis
#2) CSCI 4271
#3) a) w0 = 0
#   b) w1 = 5.78011811
#   c) w2 = -2.01204247
#   d) w3 = 3.89168167
#   e) w4 = -3.31277562
#4) 1.00

#10/03/2022 - Holden Davis
#CSCI 4371 - CRN 23360
#Assignment 1 - Fall 2022 - Dr. Stine

#Pandas to process the csv file, LinearRegression for the model, train_test_split to perform randomized 80/20 split of training to test data, mean_squared_error and r2_score for stats on trained model
import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score

print("\n\n<!---STARTING--!>\n\n")
print("\nReading data from assignment1.csv\n")
#Read in the file and add the dummy column of 1's
data = pd.read_csv("assignment_1_data.csv")
dummies = [1 for i in range(1000)]
data['x0'] = dummies
print("\nData:\n")
print(data.head())
#Split into X set (all the input / indepedent variables) and y (output / dependent variable)
xset = ['x0', 'x1', 'x2', 'x3', 'x3', 'x4']
xset = data.loc[:, xset]
print("\nxset:\n")
print(xset.head())
y = data.loc[:, ['y']]
print("\ny:\n")
print(y.head())
#Split X set and Y randomly into 80% training data and 20% testing data
xtrain, xtest, ytrain, ytest = train_test_split(xset, y, test_size=0.2)
#Create the model and fit it to the training data
model = LinearRegression()
model.fit(xtrain, ytrain)
#Test the model on the test data
ypredicted = model.predict(xtest)
#Print the weights for each X variable (input / coefficient)
print("\nx weights: %s" % model.coef_[0])
#Print the score of the model (tested accuracy)
print("Coefficient of determination: %.2f" % model.score(xtest, ytest))
#Print MSE of the model by comparing accuracy via differences on test and predicted outcomes
print("Mean squared error: %.2f" % mean_squared_error(ytest, ypredicted))
print("\n\n<!---STOPPING--!>\n\n")

#Fun facts:
#   x1 is the heaviest weighted variable by far!
#   When averaging this program over 100 runs with randomly generated test sets, the MSE was just about 1.00 every time!
#   With no printing or comments, this entire program could be 13 lines!

